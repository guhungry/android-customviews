apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'jacoco-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.junit.platform:junit-platform-engine:$junitPlatformVersion"
    // Tests - Spek
    testImplementation("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

repositories {
    mavenCentral()
}


ext {
    bintrayRepo = 'maven'
    bintrayName = 'com.guhungry.views:views'

    publishedGroupId = 'com.guhungry.views'
    libraryName = 'AndroidCustomViews'
    artifact = 'views'

    libraryDescription = 'This view is a container that supports diagonal scroll and fling gesture. It is based on AOSP HorizontalScrollView.'

    siteUrl = 'https://github.com/guhungry/android-customviews'
    gitUrl = 'https://github.com/guhungry/android-customviews.git'

    libraryVersion = '0.0.4'

    developerId = 'guhungry1'
    developerName = 'Woraphot Chokratanasombat'
    developerEmail = 'Woraphot Chokratanasombat'

    licenseName = 'MIT'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

apply from: "$rootDir/gradle/jcenter.gradle"

println "BEE"
println project
if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayKey')) {
    bintray.user = project.property('bintrayUser')
    bintray.key = project.property('bintrayKey')

    println project.property('bintrayUser')
    println project.property('bintrayKey')
} else if (project.rootProject.file('local.properties').exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray.user = properties.getProperty("bintrayUser")
    bintray.key = properties.getProperty("bintrayKey")
}